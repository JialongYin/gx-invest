Named pipe:
As named pipe(FIFO) is a kind of file, even though the data is stored on memory,
reading from FIFO or writing to it are still the system calls. The reason is that the fifo object is
manipulated by the kernel. And the data must be copied between user space and kernel space.

Slow speed factor: system call, unnecessary data copying.
Solution: shared memory can solve these, though synchronization and security is kind of cost. That's a trade-off.
Message queue and socket also require system calls to pass data that may not help in our case.

Shared memory:
Once the memory is mapped into the address space of the processes that are sharing the memory region,
processes do not execute any system calls into the kernel in passing data between processes. The copying
of data is also eliminated.
Semaphores is used to synchronize shared memory between processes.

Slow speed factor: send, recv are both blocked.
Solution: implement non-blocking version of FIFO and shared memory. SIGPIPE signal should be catched to
deal with one end opening.

Slow speed factor: single thread
Solution: multiple threads can be used to send and recv. All the work can be done in parallel.
